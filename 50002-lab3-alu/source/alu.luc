module alu (
    input a[32],
    input b[32],
    input alufn_signal[6],
    output out[32],
    output z,
    output v,
    output n
) {
    adder adder(#SIZE(32));
<<<<<<< Updated upstream
    
=======
    compare compare;
    sig cmp[32];
    boolean boolean;
>>>>>>> Stashed changes
    
    always {
        // implement alu logic here
        adder.a = a;
        adder.b = b;
        adder.alufn_signal = alufn_signal;
        z = adder.z;
        v = adder.v;
        n = adder.n;
<<<<<<< Updated upstream
        out = adder.out;   
=======
        // out = adder.out;   
        
        compare.z = adder.z;
        compare.v = adder.v;
        compare.n = adder.n;
        compare.alufn_signal = alufn_signal;
        cmp = c{31x{b0}, compare.cmp};
        // out = cmp
        
        boolean.a = a;
        boolean.b = b;
        boolean.alufn_signal = alufn_signal;
        out = boolean.bool
>>>>>>> Stashed changes
    }
}